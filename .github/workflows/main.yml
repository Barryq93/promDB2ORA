name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install DB2 Client Libraries
        run: sudo apt-get install -y ibm-db2

      - name: Install IBM Data Server Driver for Linux
        run: |
          wget -q "https://public.dhe.ibm.com/ibmdl/export/pub/software/data/db2/drivers/odbc_cli/linuxx64_odbc_cli.tar.gz" -O ibm.tar.gz
          tar -xzf ibm.tar.gz -C /tmp
          echo "C_INCLUDE_PATH=/tmp/clidriver/include:$C_INCLUDE_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/tmp/clidriver/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install CGO dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ libc6-dev mingw-w64

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build for Linux
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o db-monitoring-app-linux-amd64 cmd/main.go
          sha256sum db-monitoring-app-linux-amd64 > db-monitoring-app-linux-amd64.sha256

      - name: Build for Windows
        run: |
          echo "Warning: Building for Windows without IBM driver may fail."
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -o db-monitoring-app-windows-amd64.exe cmd/main.go || echo "Windows build failed as expected."
          sha256sum db-monitoring-app-windows-amd64.exe > db-monitoring-app-windows-amd64.exe.sha256 2>/dev/null || echo "Checksum skipped."

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-linux-amd64
          asset_name: db-monitoring-app-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-linux-amd64.sha256
          asset_name: db-monitoring-app-linux-amd64.sha256
          asset_content_type: text/plain

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-windows-amd64.exe
          asset_name: db-monitoring-app-windows-amd64.exe
          asset_content_type: application/octet-stream
        continue-on-error: true

      - name: Upload Windows Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-windows-amd64.exe.sha256
          asset_name: db-monitoring-app-windows-amd64.exe.sha256
          asset_content_type: text/plain
        continue-on-error: true