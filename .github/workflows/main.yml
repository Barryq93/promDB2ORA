name: Release

on:
  push:
    tags:
      - "v*.*.*" # Trigger on version tags (e.g., v1.0.0, v1.1.0)

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensures full history for tagging

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20" # Matches your go.mod requirement

      - name: Install dependencies
        run: go mod download # Fetches all dependencies listed in go.mod

      - name: Install CGO dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc # Required for CGO-enabled builds

      - name: Build for Linux
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o db-monitoring-app-linux-amd64 cmd/main.go
          sha256sum db-monitoring-app-linux-amd64 > db-monitoring-app-linux-amd64.sha256

      - name: Build for Windows
        run: |
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -o db-monitoring-app-windows-amd64.exe cmd/main.go
          sha256sum db-monitoring-app-windows-amd64.exe > db-monitoring-app-windows-amd64.exe.sha256

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # e.g., v1.0.0
          release_name: Release ${{ github.ref_name }}
          draft: false # Publish immediately; set to true for drafts
          prerelease: false # Set to true for pre-releases

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-linux-amd64
          asset_name: db-monitoring-app-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-linux-amd64.sha256
          asset_name: db-monitoring-app-linux-amd64.sha256
          asset_content_type: text/plain

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-windows-amd64.exe
          asset_name: db-monitoring-app-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./db-monitoring-app-windows-amd64.exe.sha256
          asset_name: db-monitoring-app-windows-amd64.exe.sha256
          asset_content_type: text/plain